
user  root;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log /usr/local/webserver/nginx/logs/nginx_error.log crit; #日志位置和日志级别

#pid        logs/nginx.pid;
pid /usr/local/webserver/nginx/nginx.pid;

#worker_rlimit_nofile 65535;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
	
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_header_buffer_size 8k;
    large_client_header_buffers 4 8k; 

    #gzip  on;
	
    upstream 120.55.162.224{      
	 	#ip_hash;
	    
              server 120.55.162.224:8081 fail_timeout=1s;  
              server 120.55.162.224:8082 backup fail_timeout=1s; 
		 #sticky;
	    #sticky expires=1h domain=120.55.162.224 path=/;  
    }
    server {
        listen 80;
        #listen       443;
        server_name  www.91weizu.cn;

       # ssl on;    #开启ssl支持
	#ssl_certificate      /usr/local/webserver/ssl/domain.crt;    #指定服务器证书路径
	#ssl_certificate_key  /usr/local/webserver/ssl/domain.key;    #指定私钥证书路径
	#ssl_session_timeout  5m;
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;     #指定SSL服务器端支持的协议版本
	#ssl_ciphers  ALL：!ADH：!EXPORT56：RC4+RSA：+HIGH：+MEDIUM：+LOW：+SSLv2：+EXP;    #指定加密算法
	#ssl_prefer_server_ciphers   on;    #在使用SSLv3和TLS协议时指定服务器的加密算法要优先于客户端的加密算法
        #charset koi8-r;

        #access_log  logs/host.access.log  main;
	
        location / {
            root   /usr/webapps/www; 
            #index  index.html index.htm;
    	   #index index.jsp;
	   proxy_connect_timeout   2s;
	    proxy_pass http://120.55.162.224; 
	    proxy_redirect default;
	  	  proxy_set_header            Host $host;
           proxy_set_header            X-real-ip $remote_addr;
           proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        }
         #location ~ .*\.(ico|png|jpg|jpeg|js|css|bmp)$ {
          #  proxy_pass http://120.55.162.224;
	  # expires      7d;
    #  }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

   
    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
