<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.weizu.flowsys.web.trade.dao.AccountPurchaseDao">
	<sql id="t_ap">account_purchase</sql>
	<sql id="t_rec">charge_record</sql>
	<!-- <sql id="t_account">charge_account</sql> -->
  <resultMap id="BaseResultMap" type="com.weizu.flowsys.web.trade.pojo.AccountPurchasePo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="purchase_id" property="purchaseId" jdbcType="BIGINT" />
    <result column="channel_discount_id" property="channelDiscountId" jdbcType="BIGINT" />
    <result column="order_amount" property="orderAmount" jdbcType="DOUBLE" />
    <result column="ap_discount" property="apDiscount" jdbcType="DOUBLE" />
    <!-- <result column="bill_type" property="billType" jdbcType="INTEGER" /> -->
    <result column="order_state" property="orderState" jdbcType="INTEGER" />
    <result column="order_state_detail" property="orderStateDetail" jdbcType="VARCHAR" />
    <result column="order_platform_path" property="orderPlatformPath" jdbcType="INTEGER" />
    <result column="order_price" property="orderPrice" jdbcType="DOUBLE" />
    <result column="from_agency_name" property="fromAgencyName" jdbcType="VARCHAR" />
    <result column="from_account_id" property="fromAccountId" jdbcType="INTEGER" />
    <result column="record_id" property="recordId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_id, purchase_id, channel_discount_id, order_amount, ap_discount,<!-- bill_type, --> order_state,order_platform_path,order_state_detail, order_price, from_agency_name 
  </sql>
  <sql id="APBase_Column_List" >
    ap.id, ap.account_id, ap.purchase_id, ap.channel_discount_id, ap.ap_discount, ap.order_amount, ap.order_state,ap.order_platform_path,ap.order_state_detail, ap.order_price, ap.from_agency_name,ap.record_id 
  </sql>
  <sql id="Add_Column_List" >
   account_id, purchase_id, channel_discount_id, ap_discount,order_amount,  order_state,order_state_detail, order_platform_path, order_price, from_agency_name,from_account_id,record_id
  </sql>
  <!-- 通过订单id列表得到消费列表 -->
  <select id="selectByOrderIds" parameterType="map" resultMap="BaseResultMap">
  	select <include refid="APBase_Column_List"></include>
  	from <include refid="t_ap"></include> ap
  	inner join <include refid="t_rec"></include> crt
  	on crt.id=ap.record_id
  	<where>
  		<if test="orderIds != null">
	  		AND ap.purchase_id in <foreach item="orderId" index="index" collection="orderIds" open="(" separator="," close=")">#{orderId}</foreach>
  		</if>
  		<if test="accountType != null">
	  		AND crt.account_type = #{accountType}
  		</if>
  		<if test="orderId != null">
	  		AND ap.purchase_id = #{orderId}
  		</if>
  	</where>
  </select>
  <!-- 根据代理商和订单号获得订单的成本 -->
  <!-- <select id="getOrderAmount" parameterType="map" resultType="double">
  	select order_amount from <include refid="t_ap"></include>
  	<where>
  		<if test="purchaseId != null">
  			AND purchase_id = #{purchaseId}
  		</if>
  		<if test="accountId != null">
  			AND account_id = #{accountId}
  		</if>
  	</where>
  </select> -->
  <!-- 根据订单号和代理商账户id找到accountPurchase的补/扣款记录 -->
  <select id="getAPByAccountType" parameterType="map" resultMap="BaseResultMap">
  	select <include refid="APBase_Column_List"></include> 
  	from <include refid="t_ap"></include> ap
  	inner join <include refid="t_rec"></include> crt
  	on crt.id=ap.record_id
  	<where>
  		<if test="purchaseId != null">
  			AND crt.purchase_id = #{purchaseId}
  		</if>
  		<if test="accountId != null">
  			AND ap.account_id = #{accountId}
  		</if>
  		<if test="accountType != null">
  			AND crt.account_type = #{accountType}
  		</if>
  	</where>
  </select>
  <!-- 批量添加 -->
   <insert id="ap_addList" useGeneratedKeys="true" parameterType="java.util.List">
  	insert into <include refid="t_ap"></include>
  	(<include refid="Add_Column_List"></include>)
  	values
  	<foreach collection="list" item="ap" index="index" separator=",">
  		(#{ap.accountId},#{ap.purchaseId},#{ap.channelDiscountId},#{ap.apDiscount},#{ap.orderAmount},#{ap.orderState},#{ap.orderStateDetail},#{ap.orderPlatformPath},#{ap.orderPrice},#{ap.fromAgencyName},#{ap.fromAccountId},#{ap.recordId})
  	</foreach>
  </insert>
  
  <update id="batchUpdateState" parameterType="map">
  	update <include refid="t_ap"></include>
  	<set>
  		<if test="orderState != null">
  			order_state = #{orderState},
  		</if>
  		<if test="orderStateDetail != null">
  			order_state_detail = #{orderStateDetail}
  		</if>
  	</set>
  	<where>
  		<if test="purchaseId != null">
  			purchase_id = #{purchaseId}
  		</if>
  		<if test="orderIds != null">
	  		AND purchase_id in <foreach item="orderId" index="index" collection="orderIds" open="(" separator="," close=")">#{orderId}</foreach>
  		</if>
  	</where>
  </update>
</mapper>