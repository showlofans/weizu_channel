!
function(MAIN, $) {
    "use strict";
    var self = MAIN.nameSpace.reg("utils"),
    userInfo = [],
    departmentData = null,
    templateCache = {},
    setMap = null;
    self.isIE = function(e, t) {
        var a = null,
        n = null;
        return a = $('<div style="display:none;"/>').appendTo($("body")),
        a.html("<!--[if " + (t || "") + " IE " + (e || "") + "]><a>&nbsp;</a><![endif]-->"),
        n = a.find("a").length,
        a.remove(),
        n
    },
    self.isArray = function(e) {
        return e instanceof Array || "[object Array]" === Object.prototype.toString.apply(e)
    },
    self.isObject = function(e) {
        return e instanceof Object || "[object Object]" === Object.prototype.toString.apply(e)
    },
    self.isPassForm = function(e) {
        var t = null;
        return t = e.data("bs.validator"),
        t.validate(),
        !(t.isIncomplete() || t.hasErrors())
    },
    self.render = function(e, t, a) {
        var n = "",
        i = "",
        l = "",
        s = "",
        o = "";
        if (Handlebars.registerHelper("LeftTag",
        function(e) {
            return new Handlebars.SafeString("<")
        }), Handlebars.registerHelper("RightTag",
        function(e) {
            return new Handlebars.SafeString(">")
        }), Handlebars.registerHelper("debug",
        function(e) {
            e && console.log(e)
        }), i = "/" === e.charAt(1) ? e: "/" + e, i = MAIN.define.templatesDir + i, o = md5(i), MAIN.define.isCacheTemplate && o in templateCache) n = templateCache[o];
        else {
            if (l = $.ajax({
                url: i,
                async: !1
            }), 4 !== l.readyState || 200 !== l.status) throw new Error(l.statusText);
            n = $.trim(l.responseText),
            MAIN.define.isCacheTemplate && (templateCache[o] = n)
        }
        return s = Handlebars.compile(n)(t),
        "function" == typeof a && a(s),
        s
    },
    self.playWav = function() {
        if (document.all) try {
            var e = document.getElementByIdx_x("MPlayer_Alert");
            null != e && e.Play()
        } catch(e) {} else audio_player.play()
    },
    self.leftMenuInit = function(e) {
        DXTX.api.leftMenu({
            async: !1,
            successCallBack: function(t) {
                DXTX.utils.render("other/leftMenu.html", {
                    list: t.data
                },
                function(t) {
                    $("#handlebarNav").html(t),
                    "index" == e ? $("li." + e).addClass("active open") : ($("li." + e).addClass("active"), $("li." + e).parent().parent().addClass("active open"))
                })
            },
            failCallBack: DXTX.utils.failCallBack
        }),
        DXTX.api.userGetUser({
            async: !1,
            successCallBack: function(e) {
                self.userInfo = e.data,
                DXTX.utils.render("other/header.html", {
                    list: self.userInfo
                },
                function(e) {
                    $("#headerHandler").html(e)
                }),
                DXTX.utils.render("other/footer.html", {
                    list: self.userInfo
                },
                function(e) {
                    $("#footerHandler").html(e)
                }),
                "undefined" != self.userInfo.logopath && $("#UserLogoPath").attr("src", self.userInfo.logopath);
                var t = io.connect("http://" + document.domain + ":9092");
                t.on("connect",
                function() {
                    var e = {
                        userName: self.userInfo.id,
                        message: self.token
                    };
                    t.emit("flowevent", e)
                }),
                t.on("flowevent",
                function(e) {
                    var t = e.message.split(",");
                    $("#NoticeCount").html(parseInt(t[0])),
                    $("#NoticeChargeing").html("充值等待" + t[0]),
                    $("#NoticeChargeWait").html("充值进行" + t[1]),
                    parseInt(t[0]) > 10 && self.playWav()
                }),
                t.on("disconnect",
                function() {
                    console.log("The client has disconnected!")
                })
            },
            failCallBack: DXTX.utils.failCallBack
        }),
        DXTX.utils.render("other/offSidebar.html", {
            list: []
        },
        function(e) {
            $("#off-sidebar").html(e)
        }),
        $("#userpassLi").on("click", "[actionrule=userpass]",
        function() {
            $("#userPassModal").modal("show"),
            $("#userPassForm").submit(function(e) {
                DXTX.api.Reset({
                    type: "put",
                    data: {
                        userpass: $("#userpassWord").val()
                    },
                    successCallBack: function(e) {
                        $.messager.alert(e.message),
                        DXTX.utils.dumpReload()
                    },
                    failCallBack: DXTX.utils.failCallBack
                }),
                e.preventDefault()
            })
        }),
        $("#logout").click(function() {
            DXTX.api.loginOut({
                type: "delete",
                successCallBack: function(e) {
                    $.messager.alert("退出成功！"),
                    window.setTimeout(function() {
                        DXTX.utils.delCookie("token"),
                        window.location.href = "/"
                    },
                    DXTX.define.dumpTimeout)
                },
                failCallBack: function(e) {
                    $.messager.alert(e.message)
                }
            })
        })
    },
    self.dumpUrl = function(e) {
        window.setTimeout(function() {
            window.location.href = e
        },
        DXTX.define.dumpTimeout)
    },
    self.failCallBack = function(e) {
        $.messager.alert(e.message)
    },
    self.dateFormat = function(e, t) {
        if ("" == e) var a = new Date;
        else var a = new Date(e.replace(/-/g, "/"));
        var n = a.getFullYear(),
        i = a.getMonth() + 1,
        l = a.getDate(),
        s = a.getHours(),
        o = a.getMinutes(),
        r = a.getSeconds();
        return i = i >= 10 ? i: "0" + i,
        l = l >= 10 ? l: "0" + l,
        s = s >= 10 ? s: "0" + s,
        o = o >= 10 ? o: "0" + o,
        r = r >= 10 ? r: "0" + r,
        "Y-m" == t ? n + "-" + i: "Y-m-d" == t ? n + "-" + i + "-" + l: "Y-m-d H" == t ? n + "-" + i + "-" + l + " " + s: "Y-m-d H:i" == t ? n + "-" + i + "-" + l + " " + s + ":" + o: "Y-m-d H:i:s" == t ? n + "-" + i + "-" + l + " " + s + ":" + o + ":" + r: void 0
    },
    self.formsData = function(pickTime) {
        var formsData = {};
        formsData.forms = 1;
        var created_start = "",
        created_end = "";
        return "undefined" != typeof pickTime && (created_start = DXTX.utils.dateFormat("", "Y-m-d"), created_end = DXTX.utils.dateFormat("", "Y-m-d"), pickTime && (created_start += " 00:00:00"), pickTime && (created_end += " 23:59:59")),
        $("#created_start, #created_end").each(function() {
            var v1 = eval(this.id),
            v2 = eval("formsData." + this.id),
            v3 = eval("DXTX.define.urlParams." + this.id);
            $(this).val("undefined" == typeof v3 ? v1: v3),
            $(this).datetimepicker({
                pickTime: pickTime,
                defaultDate: $(this).val()
            })
        }),
        formsData
    },
    self.selectInit = function(e, t, a) {
        var n = $("select#" + t);
        $.each(e,
        function() {
            var e = document.createElement("option");
            e.value = this.id,
            e.innerHTML = this.name,
            e.selected = a == this.id,
            n.append(e)
        })
    },
    self.createCookie = function(e, t, a) {
        var n;
        if (a = a ? a: DXTX.define.cookieDay) {
            var i = new Date;
            i.setTime(i.getTime() + 24 * a * 60 * 60 * 1e3),
            n = "; expires=" + i.toGMTString()
        } else n = "";
        document.cookie = e + "=" + t + n + "; path=/"
    },
    self.getCookie = function(e) {
        var t = 0,
        a = 0;
        return document.cookie.length > 0 && (t = document.cookie.indexOf(e + "="), t != -1) ? (t = t + e.length + 1, a = document.cookie.indexOf(";", t), a == -1 && (a = document.cookie.length), unescape(document.cookie.substring(t, a))) : ""
    },
    self.delCookie = function(e) {
        self.createCookie(e, "", -1)
    },
    self.token = DXTX.utils.getCookie("token"),
    self.dumpReload = function() {
        window.setTimeout(function() {
            window.location.reload()
        },
        DXTX.define.dumpTimeout)
    },
    self.getUserInfo = function() {
        return DXTX.api.userGetUser({
            async: !1,
            successCallBack: function(e) {
                userInfo = e.data
            },
            failCallBack: function(e) {
                $.messager.alert(e.message),
                e.username.length < 1 && self.dumpUrl("/")
            }
        }),
        userInfo
    },
    self.flashChecker = function() {
        var e = 0,
        t = null;
        return document.all ? t = new ActiveXObject("ShockwaveFlash.ShockwaveFlash") : navigator.plugins && navigator.plugins.length > 0 && (t = navigator.plugins["Shockwave Flash"]),
        t && (e = 1),
        e
    }
} (DXTX, jQuery);